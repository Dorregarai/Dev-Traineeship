@IsTest
public class NBRBIntegration_Test {
    static {
        List<CurrencyRate__c> crate = new List<CurrencyRate__c>();
        
        crate.add(new CurrencyRate__c(
            Name = 'RUB'
        ));
        crate.add(new CurrencyRate__c(
            Name = 'USD'
        ));
        crate.add(new CurrencyRate__c(
            Name = 'EUR'
        ));
        insert crate;
    }
    
    @isTest
    public static void getCurrencyRate_Test_1() {
        Map<String, String> header = new Map<String, String>();
        header.put('Content-Type', 'application/json');
        
        Test.setMock(
            HttpCalloutMock.class, 
            new SingleCalloutMock(
                200, 
                'Complete', 
                '{"Cur_ID": 298, "Cur_OfficialRate": 1.1}', 
                header
            )
        );
        
        Test.startTest();
        HttpResponse response = NBRBIntegration.getCurrencyRate('RUB');
        Test.stopTest();
        
        System.assertEquals(1.1 / 100, [ SELECT Rate_Value__c FROM CurrencyRate__c WHERE Name = 'RUB' ].Rate_Value__c);
    }
    
    @isTest
    public static void getCurrencyRate_Test_2() {
        Map<String, String> header = new Map<String, String>();
        header.put('Content-Type', 'application/json');
        
        Test.setMock(
            HttpCalloutMock.class, 
            new SingleCalloutMock(
                200, 
                'Complete', 
                '{"Cur_ID": 145, "Cur_OfficialRate": 2.1}', 
                header
            )
        );
        
        Test.startTest();
        HttpResponse response = NBRBIntegration.getCurrencyRate('USD');
        Test.stopTest();
        
        System.assertEquals(2.1, [ SELECT Rate_Value__c FROM CurrencyRate__c WHERE Name = 'USD' ].Rate_Value__c);
    }
    
    @isTest
    public static void getCurrencyRate_Test_3() {
        Map<String, String> header = new Map<String, String>();
        header.put('Content-Type', 'application/json');
        
        Test.setMock(
            HttpCalloutMock.class, 
            new SingleCalloutMock(
                200, 
                'Complete', 
                '{"Cur_ID": 292, "Cur_OfficialRate": 3.1}', 
                header
            )
        );
        
        Test.startTest();
        HttpResponse response = NBRBIntegration.getCurrencyRate('EUR');
        Test.stopTest();
        
        System.assertEquals(3.1, [ SELECT Rate_Value__c FROM CurrencyRate__c WHERE Name = 'EUR' ].Rate_Value__c);
    }
}
