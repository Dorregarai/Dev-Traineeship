public class DuplicateCasesController {
	@AuraEnabled(cacheable=true)
    public static List<Case> getCases(Id originalCaseId) {
        Case originalCase = DuplicateCasesControllerManager.getOriginalCase(originalCaseId)[0];
        List<Case> duplicateCaseList = DuplicateCasesControllerManager.getDuplicateCaseList(originalCase);
        
        return duplicateCaseList;
    }
    
    @AuraEnabled
    public static void mergeCases(Id originalCaseId, Case duplicateCase, Boolean isNotify) {
        Case originalCase = DuplicateCasesControllerManager.getOriginalCase(originalCaseId)[0];
        
        if(originalCase.Description == null){
            originalCase.Description = duplicateCase.Description;
        } else {
            originalCase.Description += ' ----//---- ' + duplicateCase.Description;
        }
            
        if(duplicateCase.AccountId != null && originalCase.AccountId == null) {
            originalCase.AccountId = duplicateCase.AccountId; 
        }
        
        if(duplicateCase.Priority == 'High') { originalCase.Priority = duplicateCase.Priority; }
        if(
            (originalCase.Priority == 'Medium' || originalCase.Priority == 'Low') && 
            duplicateCase.Priority == 'High'
        ) { originalCase.Priority = duplicateCase.Priority; }
        if(
            originalCase.Priority == 'Low' && 
           (duplicateCase.Priority == 'High' || duplicateCase.Priority == 'Medium')
        ) { originalCase.Priority = duplicateCase.Priority; }
        
        if(duplicateCase.Lead__c != null && originalCase.Lead__c == null) {
            originalCase.Lead__c = duplicateCase.Lead__c; 
        }
        if(originalCase.Country__c == null) {
            originalCase.Country__c = duplicateCase.Country__c;
        }
        if(originalCase.SuppliedEmail == null) {
            originalCase.SuppliedEmail = duplicateCase.SuppliedEmail;
        }
        
        List<EmailMessage> emailMessagesToUpdate = new List<EmailMessage>();
        for(EmailMessage elem : DuplicateCasesControllerManager.getEmailMessage(duplicateCase)) {
            elem.ParentId = originalCase.Id;
            
            emailMessagesToUpdate.add(elem);
        }
        
        if(duplicateCase.ParentId == null) {
            duplicateCase.ParentId = originalCase.Id;
        }
        duplicateCase.Status = 'Closed (Resolved)';
        
        update originalCase;
        update duplicateCase;
        update emailMessagesToUpdate;
        
        if(isNotify == true) {
            System.enqueueJob(
                new Notification(DuplicateCasesControllerManager.notificationMessageSet(duplicateCase),
                                 duplicateCase.OwnerId)
            );
        }
    }
}
